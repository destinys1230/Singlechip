#include <reg52.h>
#include <stdio.h>
#include <intrins.h>


//LCD
sbit CS1=P1^7;
sbit CS2=P1^6;
sbit RST=P1^5;
sbit E=P3^3;
sbit RW=P3^4;
sbit RS=P3^5;
sbit BUSY=P2^7;
sbit KEY1=P3^6;
sbit KEY2=P3^7;


sbit DQ=P1^4;
sbit RQ=P1^1;


bit bt;
int i,j,k,a,b,c,d,e,f,objTemp=0,nowTemp=0,temp;
int firstDiff=0,secondDiff=0,N=0,M=256,SUM=0,x;
unsigned char t,temo,status=0x01,tempNum=0x00;




char code shiwen[4][16]={
{0x10,0x0C,0x24,0x24,0xA4,0x64,0x25,0x26,0x24,0x24,0xA4,0x24,0x24,0x14,0x0C,0x00},
{0x40,0x40,0x48,0x49,0x49,0x49,0x49,0x7F,0x49,0x49,0x49,0x4B,0x48,0x40,0x40,0x00},/*"?",0*/

{0x10,0x60,0x02,0x8C,0x00,0x00,0xFE,0x92,0x92,0x92,0x92,0x92,0xFE,0x00,0x00,0x00},
{0x04,0x04,0x7E,0x01,0x40,0x7E,0x42,0x42,0x7E,0x42,0x7E,0x42,0x42,0x7E,0x40,0x00}/*"?",1*/
};
char code mubiao[4][16]={
{0x00,0x00,0xFE,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0xFE,0x00,0x00,0x00},
{0x00,0x00,0xFF,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0xFF,0x00,0x00,0x00},/*"?",0*/

{0x10,0x10,0xD0,0xFF,0x90,0x10,0x20,0x22,0x22,0x22,0xE2,0x22,0x22,0x22,0x20,0x00},
{0x04,0x03,0x00,0xFF,0x00,0x13,0x0C,0x03,0x40,0x80,0x7F,0x00,0x01,0x06,0x18,0x00}/*"?",1*/
};
char code number[10][16]=
{{0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00},/*"0",0*/
{0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},/*"1",1*/
{0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00},/*"2",2*/
{0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00},/*"3",3*/
{0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00},/*"4",4*/
{0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00},/*"5",5*/
{0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00},/*"6",6*/
{0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00},/*"7",7*/
{0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00},/*"8",8*/
{0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00},/*"9",9*/};



void wait(unsigned int count){
	while(count--){
		_nop_();
	}
}

void checkReady(bit cs){
	CS1= cs==0 ? 1:0;
	CS2= cs==1 ? 1:0;
	P2=0xff;
	E=1;
	RS=0;
	RW=1;
	while(BUSY==1);
	E=0;
	CS2=0;
	CS1=0;
}
void write_command(bit cs,char com){
	checkReady(cs);
	CS1= cs==0 ? 1:0;
	CS2= cs==1 ? 1:0;
	RS=0;
	RW=0;
	E=1;
	P2=com;
	wait(20);
	E=0;
	CS1=0;
	CS2=0;
}
void cls(bit cs){
	for(i=0;i<8;i++){
		write_command(cs,0xb8+i);
		for(j=0;j<64;j++){
			checkReady(cs);
			CS1= cs==0 ? 1:0;
			CS2= cs==1 ? 1:0;
			E=1;
			RS=1;
			RW=0;
			P2=0x00;
			wait(20);
			E=0;
		}
	}
}
void write_bytes(bit cs,char * buffer,int len){
	for(i=0;i<len;i++){
		checkReady(cs);
		CS1= cs==0 ? 1:0;
		CS2= cs==1 ? 1:0;
		E=1;
		RS=1;
		RW=0;
		P2=*(buffer+i);
		wait(20);
		E=0;
	}
}
void outChina(bit cs,char x,char y,char china[][16]){
	write_command(cs,x+0xb8);
	write_command(cs,y+0x40);
	write_bytes(cs,*china,16);

	write_command(cs,x+1+0xb8);
	write_command(cs,y+0x40);
	write_bytes(cs,*(china+1),16);
}
void outNumber(bit cs,char x,char y,int num){
	write_command(cs,x+0xb8);
	write_command(cs,y+0x40);
	write_bytes(cs,number[num],8);
	write_command(cs,x+1+0xb8);
	write_command(cs,y+0x40);
	write_bytes(cs,number[num]+8,8);
}


void showNow(int num){
	a=num/1000;
	b=(num-a*1000)/100;
	c=(num-a*1000-b*100)/10;
	d=num-a*1000-b*100-c*10;
	outNumber(0,4,40,d);
	outNumber(0,4,30,c);
	outNumber(0,4,20,b);
	outNumber(0,4,10,a);
}
void showTarget(int num){
  a=num/1000;
	b=(num-a*1000)/100;
	c=(num-a*1000-b*100)/10;
	d=num-a*1000-b*100-c*10;
	outNumber(1,4,40,d);
	outNumber(1,4,30,c);
	outNumber(1,4,20,b);
	outNumber(1,4,10,a);
}
void initLCD(){
	cls(1);
	write_command(0,0x3f);
	cls(0);
	write_command(1,0x3f);
	outChina(0,1,10,shiwen);
	outChina(0,1,30,shiwen+2);
	outChina(1,1,10,mubiao);
	outChina(1,1,30,mubiao+2);
}

bit initDS(void)
{
	DQ=0;
	wait(480);
	DQ=1;
	wait(60);
	bt=DQ;
	wait(420);
	return bt;
}
unsigned char readByte(void)
{
		temp=0;
	for(i=8;i>0;i--)
	{
		temp>>=1;
		DQ=0;
		wait(1);
		DQ=1;
		wait(1);
		if(DQ)
		{
			temp|=0x80;
		}
		wait(60);
	}
		return temp;
}
void writeByte(unsigned char dat)
{

	for(i=8;i>0;i--)
	{
		DQ=0;
		wait(8);
		dat>>=1;
		DQ=CY;
		wait(60);
		DQ=1;
		wait(10);
	}
}
int readTemperature(void)
{
	initDS();
	while(!DQ);
	writeByte(0xcc);
	writeByte(0x44);
	while(!DQ);
	initDS();
	while(!DQ);
	writeByte(0xcc);
	writeByte(0xbe);
	a=readByte();
	b=readByte();
	P0=a;
	wait(255);
	x=b;
	x<<=8;
	x|=a;
	return x*0.0625;
}


void waitL(int count){
	k=0xffff;
	while(count--){
		while(k--);
	}
}
int getStep(int diff1,int diff2)
{
	return(diff2+(diff1+diff2)/2+(diff2-diff1))/2;
}
void main()
{
	initLCD();
	while(1)
	{
		SUM+=N;
		if(SUM>M)
		{
			RQ=1;
			SUM-=M;
		}else
		{
			RQ=0;
		}
		if(!KEY1){
			objTemp=70;
		}else{
			objTemp=00;
		}
		nowTemp=readTemperature();
		if(nowTemp!=objTemp)
		{
			if(firstDiff==0)
			{
				firstDiff=objTemp-nowTemp;
			}else
			{
				secondDiff = objTemp-nowTemp;
				N+=getStep(firstDiff,secondDiff);
				if(N<0)
				{
					N=0;
				}
				if(N>M+1)
				{
					N=M;
				}
				firstDiff=0;
			}
		}
		showTarget(objTemp);
		showNow(nowTemp);
		waitL(0x03);
	}
}